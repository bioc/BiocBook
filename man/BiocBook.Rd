% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/BiocBook.R, R/BiocBook-methods.R
\docType{class}
\name{BiocBook}
\alias{BiocBook}
\alias{BiocBook-class}
\alias{BiocBook_init}
\alias{releases}
\alias{chapters}
\alias{path,BiocBook-method}
\alias{releases,BiocBook-method}
\alias{chapters,BiocBook-method}
\alias{show,BiocBook-method}
\title{Handling BiocBook directories}
\usage{
BiocBook_init(
  new_package,
  skip_availability = FALSE,
  template = "js2264/BiocBook.template",
  commit = NA,
  local = FALSE,
  github_user = NA
)

BiocBook(path)

releases(object)

chapters(object)

\S4method{path}{BiocBook}(object)

\S4method{releases}{BiocBook}(object)

\S4method{chapters}{BiocBook}(object)

\S4method{show}{BiocBook}(object)
}
\arguments{
\item{new_package}{Name to use when initiating a new \code{BiocBook}.
This name should be compatible with package naming conventions
from R and Bioconductor (i.e. no \verb{_} or \code{-}, no name starting with a number).}

\item{skip_availability}{Optional. Whether to skip package name availability (default: FALSE).}

\item{template}{Optional. Github repository used for \code{BiocBook} template (default: \code{js2264/BiocBook.template}).}

\item{commit}{Optional. Logical, whether to automatically push commits to remote Github origin (default: FALSE).}

\item{local}{Optional. Whether to create a matching Github repository or stay local (default: FALSE).}

\item{github_user}{Optional. If \code{local = TRUE}, please do provide your Github username to edit BiocBook placeholders. If not provided, \verb{<user>} placeholders will remain in several files until manually filled (default: NA).}

\item{path}{Path of an existing \code{BiocBook}.}

\item{object}{A \code{BiocBook} object, created by \code{BiocBook} or \code{BiocBook_init()}.}
}
\value{
A \code{BiocBook} object (invisible).
}
\description{
\code{BiocBook}s are local R packages containing an extra \code{pages} folder to
write up online book chapters.
\enumerate{
\item A new \code{BiocBook} should be created using \code{BiocBook_init(new_package = "...")}.
\item A newly created \code{BiocBook} can be accessed to in R using \code{biocbook <- BiocBook(path = "...")}.
\item To edit an existing \code{BiocBook} object, several helper functions exist:
}
\itemize{
\item \code{add_preamble(biocbook)}
\item \code{add_chapter(biocbook, title = "...")}
\item \code{edit_page(biocbook, page = "...")}
}

Read the different sections down below for more details.
}
\section{The \code{BiocBook} class}{


A \code{BiocBook} object acts as a pointer to a local package directory, with
book chapters contained in a \verb{pages/} folder as \code{.qmd} files.

This package directory requires a specific architecture, which is
best set up using the \code{BiocBook_init()} function.

When created, 3 slots are defined:
\itemize{
\item \code{title}: The title contained in \verb{/inst/assets/_book.yml}
\item \code{local_path}: The absolute path to the book package directory
\item \code{remote_repository}: If the book is synced with Github, this will indicate
the remote
}
}

\section{Creating a \code{BiocBook}}{


A new \code{BiocBook} should be created using the \code{BiocBook_init(new_package = "...")} function.
This function performs the following operations:
\enumerate{
\item It checks that the provided package name is available;
\item It logs in the GitHub user accounts;
\item It creates a new \strong{remote} Github repository using the \code{BiocBook} template from \code{js2264/BiocBook};
\item It clones the \strong{remote} Github repository to a local folder;
\item It edits several placeholders from the template and commits the changes.
}

The \code{BiocBook_init(new_package = "...")} function returns a \code{BiocBook} object.
}

\section{Editing an existing \code{BiocBook}}{


\code{BiocBook} objects can be modified using the following helper functions:
\itemize{
\item \code{add_preamble(biocbook)} to start writing a preamble;
\item \code{add_chapter(biocbook, title = "...")} to start writing a new chapter;
\item \code{edit_page(biocbook, page = "...")} to edit an existing chapter.
}
}

\section{Publishing an existing \code{BiocBook}}{


As long as the local \code{BiocBook} has been initiated with \code{BiocBook_init()},
the writer simply has to commit changes and push them to the \code{origin} remote.

In \code{R}, this can be done as follows:

\code{gert::git_commit_all(message, repo = path(biocbook))}

The different available versions published in the \code{origin} \code{gh-pages} branch
can be listed using \code{BiocBook_versions(biocbook)}
}

\examples{
BiocBook_init('localbook', local = TRUE, github_user = 'js2264')
bb <- BiocBook('localbook')
chapters(bb)
releases(bb)
unlink('localbook', recursive = TRUE)
}
